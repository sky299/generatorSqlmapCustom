<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duxing.xhc.api.common.dao.TAppointmentGoodsMapper">
  <resultMap id="BaseResultMap" type="com.duxing.xhc.api.common.model.TAppointmentGoods">
    <id column="appointment_goods_id" jdbcType="VARCHAR" property="appointmentGoodsId" />
    <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
    <result column="goods_marketing_id" jdbcType="VARCHAR" property="goodsMarketingId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    appointment_goods_id, goods_id, goods_marketing_id
  </sql>
  <select id="selectByExample" parameterType="com.duxing.xhc.api.common.model.TAppointmentGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_appointment_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_appointment_goods
    where appointment_goods_id = #{appointmentGoodsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_appointment_goods
    where appointment_goods_id = #{appointmentGoodsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.duxing.xhc.api.common.model.TAppointmentGoodsExample">
    delete from t_appointment_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duxing.xhc.api.common.model.TAppointmentGoods">
    insert into t_appointment_goods (appointment_goods_id, goods_id, goods_marketing_id
      )
    values (#{appointmentGoodsId,jdbcType=VARCHAR}, #{goodsId,jdbcType=VARCHAR}, #{goodsMarketingId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.duxing.xhc.api.common.model.TAppointmentGoods">
    insert into t_appointment_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appointmentGoodsId != null">
        appointment_goods_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsMarketingId != null">
        goods_marketing_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appointmentGoodsId != null">
        #{appointmentGoodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsMarketingId != null">
        #{goodsMarketingId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duxing.xhc.api.common.model.TAppointmentGoodsExample" resultType="java.lang.Long">
    select count(*) from t_appointment_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_appointment_goods
    <set>
      <if test="record.appointmentGoodsId != null">
        appointment_goods_id = #{record.appointmentGoodsId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsMarketingId != null">
        goods_marketing_id = #{record.goodsMarketingId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_appointment_goods
    set appointment_goods_id = #{record.appointmentGoodsId,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=VARCHAR},
      goods_marketing_id = #{record.goodsMarketingId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duxing.xhc.api.common.model.TAppointmentGoods">
    update t_appointment_goods
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsMarketingId != null">
        goods_marketing_id = #{goodsMarketingId,jdbcType=VARCHAR},
      </if>
    </set>
    where appointment_goods_id = #{appointmentGoodsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duxing.xhc.api.common.model.TAppointmentGoods">
    update t_appointment_goods
    set goods_id = #{goodsId,jdbcType=VARCHAR},
      goods_marketing_id = #{goodsMarketingId,jdbcType=VARCHAR}
    where appointment_goods_id = #{appointmentGoodsId,jdbcType=VARCHAR}
  </update>
  <select id="sumByExample" parameterType="com.duxing.xhc.api.common.model.TAppointmentGoodsExample" resultType="long" >
    select sum(${sumCol}) from t_appointment_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="batchUpdate" parameterType="java.util.List">
    update t_appointment_goods 
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="appointment_goods_id =case appointment_goods_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item">
          <if test="item.appointmentGoodsId !=null ">
            when #{item.appointmentGoodsId,jdbcType=VARCHAR} then #{item.appointmentGoodsId,jdbcType=VARCHAR}
          </if>
          <if test="item.appointmentGoodsId ==null ">
            when #{item.appointmentGoodsId,jdbcType=VARCHAR} then t_appointment_goods.appointment_goods_id
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_id =case appointment_goods_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item">
          <if test="item.goodsId !=null ">
            when #{item.appointmentGoodsId,jdbcType=VARCHAR} then #{item.goodsId,jdbcType=VARCHAR}
          </if>
          <if test="item.goodsId ==null ">
            when #{item.appointmentGoodsId,jdbcType=VARCHAR} then t_appointment_goods.goods_id
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_marketing_id =case appointment_goods_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item">
          <if test="item.goodsMarketingId !=null ">
            when #{item.appointmentGoodsId,jdbcType=VARCHAR} then #{item.goodsMarketingId,jdbcType=VARCHAR}
          </if>
          <if test="item.goodsMarketingId ==null ">
            when #{item.appointmentGoodsId,jdbcType=VARCHAR} then t_appointment_goods.goods_marketing_id
          </if>
        </foreach>
      </trim>
    </trim>
    where appointment_goods_id in(
    <foreach collection="recordList" index="index" item="item" separator=",">
      #{item.appointmentGoodsId,jdbcType=VARCHAR}
    </foreach>
    )
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into t_appointment_goods (
    appointment_goods_id,
    goods_id,
    goods_marketing_id
    )
    values
    <foreach collection="recordList" index="index" item="item" separator=",">
      (
      #{item.appointmentGoodsId,jdbcType=VARCHAR},
      #{item.goodsId,jdbcType=VARCHAR},
      #{item.goodsMarketingId,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <delete id="batchDelete" parameterType="java.lang.String">
    delete from t_appointment_goods where appointment_goods_id in (
    <foreach collection="ids" index="index" item="item" separator=",">
      #{item}
    </foreach>
    )
  </delete>
</mapper>